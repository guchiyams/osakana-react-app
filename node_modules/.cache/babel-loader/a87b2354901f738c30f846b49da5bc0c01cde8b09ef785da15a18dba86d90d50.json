{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { GoogleAuthProvider, getAuth, signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, applyActionCode, confirmPasswordReset, updatePassword } from \"firebase/auth\";\nimport { getFirestore, query, doc, getDocs, collection, where, addDoc, deleteDoc, updateDoc } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBIs8MySWwUl72x5ivYkpsjEw9u0aZFzIM\",\n  authDomain: \"eguchishop-fish.firebaseapp.com\",\n  projectId: \"eguchishop-fish\",\n  storageBucket: \"eguchishop-fish.appspot.com\",\n  messagingSenderId: \"965541816870\",\n  appId: \"1:965541816870:web:61db2ec7bbb18c8184d4e7\"\n};\n\n// initialize firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n// const storage = getStorage(app);\n\n// Login function\nconst logInWithEmailAndPassword = async (email, password, setIncorrect) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    setIncorrect(true);\n  }\n};\n\n// Register function with email/password\nconst registerWithEmailAndPassword = async (firstName, lastName, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    const name = firstName + \" \" + lastName;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      firstName,\n      lastName,\n      authProvider: \"local\",\n      email\n    });\n  } catch (err) {\n    console.error(err.message);\n    //Email exists?\n    if (err.message = \"EMAIL_EXISTS\") return true;\n  }\n};\n\n// Logout function\nconst logout = () => {\n  signOut(auth);\n};\nexport { auth,\n// db,\n// storage,\nlogInWithEmailAndPassword, registerWithEmailAndPassword, logout };","map":{"version":3,"names":["initializeApp","GoogleAuthProvider","getAuth","signInWithPopup","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","applyActionCode","confirmPasswordReset","updatePassword","getFirestore","query","doc","getDocs","collection","where","addDoc","deleteDoc","updateDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","db","logInWithEmailAndPassword","email","password","setIncorrect","err","console","error","registerWithEmailAndPassword","firstName","lastName","res","user","name","uid","authProvider","message","logout"],"sources":["/Users/guchiyam/Desktop/PROJECTS/MOM_FISH/osakana-react-app/src/config/firebase-config.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport {\n  GoogleAuthProvider,\n  getAuth,\n  signInWithPopup,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  signOut,\n  applyActionCode,\n  confirmPasswordReset,\n  updatePassword,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  query,\n  doc,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n  deleteDoc,\n  updateDoc,\n} from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBIs8MySWwUl72x5ivYkpsjEw9u0aZFzIM\",\n  authDomain: \"eguchishop-fish.firebaseapp.com\",\n  projectId: \"eguchishop-fish\",\n  storageBucket: \"eguchishop-fish.appspot.com\",\n  messagingSenderId: \"965541816870\",\n  appId: \"1:965541816870:web:61db2ec7bbb18c8184d4e7\"\n};\n\n// initialize firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n// const storage = getStorage(app);\n\n// Login function\nconst logInWithEmailAndPassword = async (email, password, setIncorrect) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    setIncorrect(true);\n  }\n};\n\n// Register function with email/password\nconst registerWithEmailAndPassword = async(firstName, lastName, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    const name = firstName + \" \" + lastName\n\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      firstName, \n      lastName,\n      authProvider: \"local\",\n      email\n    });\n  } catch (err) {\n    console.error(err.message);\n    //Email exists?\n    if (err.message = \"EMAIL_EXISTS\") return true;\n  }\n};\n\n// Logout function\nconst logout = () => {\n  signOut(auth);\n};\n\nexport {\n  auth,\n  // db,\n  // storage,\n  logInWithEmailAndPassword,\n  registerWithEmailAndPassword,\n  logout\n}; "],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SACEC,kBAAkB,EAClBC,OAAO,EACPC,eAAe,EACfC,0BAA0B,EAC1BC,8BAA8B,EAC9BC,OAAO,EACPC,eAAe,EACfC,oBAAoB,EACpBC,cAAc,QACT,eAAe;AACtB,SACEC,YAAY,EACZC,KAAK,EACLC,GAAG,EACHC,OAAO,EACPC,UAAU,EACVC,KAAK,EACLC,MAAM,EACNC,SAAS,EACTC,SAAS,QACJ,oBAAoB;AAC3B;AACA;;AAEA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,iCAAiC;EAC7CC,SAAS,EAAE,iBAAiB;EAC5BC,aAAa,EAAE,6BAA6B;EAC5CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,GAAG,GAAG1B,aAAa,CAACmB,cAAc,CAAC;AACzC,MAAMQ,IAAI,GAAGzB,OAAO,CAACwB,GAAG,CAAC;AACzB,MAAME,EAAE,GAAGlB,YAAY,CAACgB,GAAG,CAAC;AAC5B;;AAEA;AACA,MAAMG,yBAAyB,GAAG,OAAOC,KAAK,EAAEC,QAAQ,EAAEC,YAAY,KAAK;EACzE,IAAI;IACF,MAAM5B,0BAA0B,CAACuB,IAAI,EAAEG,KAAK,EAAEC,QAAQ,CAAC;EACzD,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBD,YAAY,CAAC,IAAI,CAAC;EACpB;AACF,CAAC;;AAED;AACA,MAAMI,4BAA4B,GAAG,OAAMC,SAAS,EAAEC,QAAQ,EAAER,KAAK,EAAEC,QAAQ,KAAK;EAClF,IAAI;IACF,MAAMQ,GAAG,GAAG,MAAMlC,8BAA8B,CAACsB,IAAI,EAAEG,KAAK,EAAEC,QAAQ,CAAC;IACvE,MAAMS,IAAI,GAAGD,GAAG,CAACC,IAAI;IACrB,MAAMC,IAAI,GAAGJ,SAAS,GAAG,GAAG,GAAGC,QAAQ;IAEvC,MAAMtB,MAAM,CAACF,UAAU,CAACc,EAAE,EAAE,OAAO,CAAC,EAAE;MACpCc,GAAG,EAAEF,IAAI,CAACE,GAAG;MACbL,SAAS;MACTC,QAAQ;MACRK,YAAY,EAAE,OAAO;MACrBb;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACW,OAAO,CAAC;IAC1B;IACA,IAAIX,GAAG,CAACW,OAAO,GAAG,cAAc,EAAE,OAAO,IAAI;EAC/C;AACF,CAAC;;AAED;AACA,MAAMC,MAAM,GAAG,MAAM;EACnBvC,OAAO,CAACqB,IAAI,CAAC;AACf,CAAC;AAED,SACEA,IAAI;AACJ;AACA;AACAE,yBAAyB,EACzBO,4BAA4B,EAC5BS,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}